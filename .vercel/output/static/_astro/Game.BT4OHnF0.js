class m{id;board;x;y;SIZE;SIZE_BOARD;element;squareNumber;container;number;constructor(e,t,s,r,a,n,o){this.id=e,this.board=t,this.x=s,this.y=r,this.SIZE=a,this.SIZE_BOARD=n,this.number=2,this.element=document.createElement("div"),this.squareNumber=document.createElement("div"),this.container=o,this.createSquare(),this.moveTo(s,r,a,2)}createSquare(){this.element.id=this.id.toString(),this.element.style.width=`${this.SIZE}px`,this.element.style.height=`${this.SIZE}px`,this.squareNumber.innerHTML=this.number.toString(),this.squareNumber.classList.add("square-2","square-number"),this.element.classList.add("square"),this.element.appendChild(this.squareNumber),this.container?.appendChild(this.element)}updateSquareElement(e){this.number!==e&&(this.squareNumber.classList.remove(`square-${this.number}`,"square-animated"),this.squareNumber.offsetWidth,this.squareNumber.classList.add(`square-${e}`,"square-animated"),this.squareNumber.innerHTML=e.toString(),this.element.style.zIndex=`${e}`)}moveTo(e,t,s,r){const{borderX:a,borderY:n}=this.getBorder(e,t);this.element.style.transform=`translate(${e*s+a}px, ${t*s+n}px)`,this.updateSquareElement(r),this.number=r,this.x=e,this.y=t}moveSquareAnt(e,t,s,r){if(!r||!this.squareExistInContainer(r.element.id))return;const{borderX:a,borderY:n}=this.getBorder(e,t);r.element.style.transform=`translate(${e*s+a}px, ${t*s+n}px)`,r.element.id="",setTimeout(()=>{r.element.style.display="none",this.board.containerSquares.removeChild(r.element),this.squaresExistInArray(r.element.id)},50)}squaresExistInArray(e){const s=[...document.querySelectorAll(".square")].map(n=>parseInt(n.id));if(s.length<=0)return;s.pop();const r=this.board.array.map(n=>n.map(o=>o.square&&o.square.id)),a=Array(r.length).concat(...r).filter(n=>n!==null&&n!==e);s.forEach(n=>{a.includes(n)||this.deleteSquare(n.toString())})}deleteSquare(e){const t=document.getElementById(e);t&&this.board.containerSquares.removeChild(t)}squareExistInContainer(e){return e===""?!1:[...document.querySelectorAll(".square")].map(r=>r.id).includes(e)}getBorder(e,t){return{borderX:10*e,borderY:10*t}}}class d{game;element;SIZE;SIZE_SQUARE;containerSquares;array;squareAnt;idSquares;constructor(e,t){this.game=e,this.SIZE=t,this.SIZE_SQUARE=70,this.squareAnt=null,this.idSquares=0,this.element=document.querySelector(".board"),this.array=this.createBoardArray(t),this.containerSquares=this.createContainerSquares(),this.init()}createBoardArray(e){const t=document.createDocumentFragment(),s=new Array(this.SIZE);for(let r=0;r<e;r++){s[r]=[];for(let a=0;a<this.SIZE;a++){const n=this.createCell();t.appendChild(n),s[r][a]={num:0,square:null}}}return this.createBoard(t,e),s}createBoard(e,t){this.element?.appendChild(e),this.element.style.gridTemplateColumns=`repeat(${t}, ${this.SIZE_SQUARE}px)`,this.element.style.gridTemplateRows=`repeat(${t}, ${this.SIZE_SQUARE}px)`}createContainerSquares(){const e=document.createElement("div");return e.classList.add("container-squares"),this.element?.appendChild(e),e}createCell(){const e=document.createElement("div");return e.classList.add("board-cell"),e}addRandomSquare(e){let t=e*e;for(let s=0;s<t;s++){const{x:r,y:a}=this.getRandomNumbers(e),n=this.array[a][r];if(n.num===0){this.idSquares++;const o=new m(this.idSquares,this,r,a,this.SIZE_SQUARE,this.SIZE,this.containerSquares);n.num=2,n.square=o;break}}}getRandomNumbers(e){const t=Math.floor(Math.random()*e),s=Math.floor(Math.random()*e);return{x:t,y:s}}init(){let e=!1;document.addEventListener("keydown",t=>{e||(e=!0,this.handleMove(t)),this.game.addColorArrows(t)}),document.addEventListener("keyup",t=>{e=!1,this.game.removeColorArrows(t)}),this.addRandomSquare(this.SIZE),this.addRandomSquare(this.SIZE)}handleMove(e){if(this.game.win)return;switch(e.code){case"ArrowRight":this.handleMoveX(!0);break;case"ArrowUp":this.handleMoveY(!1);break;case"ArrowLeft":this.handleMoveX(!1);break;case"ArrowDown":this.handleMoveY(!0)}}handleMoveX(e){const t=this.array.map(s=>{const r=s.filter(i=>i.num>0),{summedRow:a,summed:n,squareAnt:o}=e?this.sumRight(r):this.sumLeft(r),l=a.filter(i=>i.num>0),u=this.fillRow(l,e);return this.moveX(u,n,o),u});this.array=t,this.addRandomSquare(this.SIZE)}handleMoveY(e){const s=this.changeArrayDirecton(this.array).map(r=>{const a=r.filter(h=>h.num>0),{summedRow:n,summed:o,squareAnt:l}=e?this.sumRight(a):this.sumLeft(a),u=n.filter(h=>h.num>0),i=this.fillRow(u,e);return this.moveY(i,o,l),i});this.array=this.changeArrayDirecton(s),this.addRandomSquare(this.SIZE)}changeArrayDirecton(e){let t=[];for(let s=0;s<this.SIZE;s++){t[s]=[];for(let r=0;r<this.SIZE;r++)t[s][r]=e[r][s]}return t}moveX(e,t,s){e.forEach((r,a)=>{if(r.num<=0)return;const n=r.square.y;t&&r.square.moveSquareAnt(a,n,this.SIZE_SQUARE,s),r.square.moveTo(a,n,this.SIZE_SQUARE,r.num)})}moveY(e,t,s){e.forEach((r,a)=>{if(r.num<=0)return;const n=r.square.x;t&&r.square.moveSquareAnt(n,a,this.SIZE_SQUARE,s),r.square.moveTo(n,a,this.SIZE_SQUARE,r.num)})}sumRight(e){let t=!1,s=null;for(let r=e.length-1;r>0&&!(r<0);r--){const a=e[r],n=e[r-1];a.num===n.num&&(this.sumSquares(a,n),s=n.square,t=!0,n.num=0,n.square=null)}return{summedRow:e,summed:t,squareAnt:s}}sumLeft(e){let t=!1,s=null;for(let r=0;r<e.length&&!(r>=e.length-1);r++){const a=e[r],n=e[r+1];a.num===n.num&&(this.sumSquares(a,n),s=n.square,t=!0,n.num=0,n.square=null)}return{summedRow:e,summed:t,squareAnt:s}}sumSquares(e,t){e.num+=t.num,this.game.handleScore(e.num),this.game.checkWin(e.num)}fillRow(e,t){const s=e;for(let r=0;r<this.SIZE;r++)s.length<this.SIZE&&(t?s.unshift({num:0,square:null}):s.push({num:0,square:null}));return s}}class S{score=0;elementScore;elementBestScore;board;win;arrowLeft=document.getElementById("row-left");arrowUp=document.getElementById("row-up");arrowBottom=document.getElementById("row-bottom");arrowRight=document.getElementById("row-right");constructor(){this.board=new d(this,4),this.elementScore=document.getElementById("score"),this.elementBestScore=document.getElementById("best-score"),this.win=!1,this.drawBestScore(),document.querySelector(".newgame button")?.addEventListener("click",()=>this.newGame()),document.querySelector(".button-win")?.addEventListener("click",()=>this.newGame())}handleScore(e){this.score+=e,this.elementScore.innerHTML=this.score.toString(),this.updateBestScore(this.score),this.drawBestScore()}updateBestScore(e){const t=localStorage.getItem("bestScore");if(typeof t=="string"){const s=JSON.parse(t);s.push(e),localStorage.setItem("bestScore",JSON.stringify(s))}}drawBestScore(){const e=localStorage.getItem("bestScore");if(typeof e=="string"){let t=JSON.parse(e),s=0;t.forEach(r=>{r>s&&(s=r)}),this.elementBestScore.innerHTML=`${s}`}}newGame(){const e=document.querySelector(".container-win");e.style.display="none",this.score=0,this.win=!1,this.elementScore.innerHTML=this.score.toString();const t=this.board.array.map(s=>s.map(()=>({num:0,square:null})));this.board.array=t,this.board.containerSquares.innerHTML="",this.board.addRandomSquare(this.board.SIZE),this.board.addRandomSquare(this.board.SIZE)}checkWin(e){e===2048&&this.handleWin()}handleWin(){this.win=!0;const e=document.querySelector(".container-win"),t=document.querySelector(".win-score span");e.style.display="flex",t.innerHTML=this.score.toString()}addColorArrows(e){switch(e.code){case"ArrowRight":this.arrowRight.style.background="#77eb26";break;case"ArrowUp":this.arrowUp.style.background="#77eb26";break;case"ArrowLeft":this.arrowLeft.style.background="#77eb26";break;case"ArrowDown":this.arrowBottom.style.background="#77eb26";break}}removeColorArrows(e){switch(e.code){case"ArrowRight":this.arrowRight.style.background="";break;case"ArrowUp":this.arrowUp.style.background="";break;case"ArrowLeft":this.arrowLeft.style.background="";break;case"ArrowDown":this.arrowBottom.style.background="";break}}}export{S as Game};
