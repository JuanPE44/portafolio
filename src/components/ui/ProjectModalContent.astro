---
import Badge from "../atoms/Badge.astro";
import Button from "../atoms/Button.astro";

export interface ProjectDetailsType {
  image: string;
  title: string;
  company: string;
  dates: string;
  description: string;
  role: string[];
  technologies: string[];
  features: string[];
  results: string[];
  link: string;
}

const {
  image,
  title,
  company,
  dates,
  description,
  role,
  technologies,
  features,
  results,
  link,
} = Astro.props as ProjectDetailsType;
---

<div class="flex flex-col space-y-6 text-left">
  <!-- Header with image -->
  <div
    class="relative w-full h-60 md:h-80 rounded-xl overflow-hidden bg-gradient-to-br from-zinc-800 to-zinc-900"
  >
    <img
      src={image || "/placeholder.svg"}
      alt={`${title} screenshot`}
      class="w-full h-full object-cover object-top opacity-90 hover:opacity-100 transition-opacity duration-300"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black to-black/20">
    </div>
    <div class="absolute bottom-0 left-0 p-4 md:p-6">
      <div class="flex items-center gap-2 mb-2">
        <span
          class="px-3 py-1 bg-primary/20 border border-primary backdrop-blur-sm text-primary text-xs font-medium rounded-full"
        >
          {company}
        </span>
        <span
          class="px-3 py-1 bg-foreground-secondary/20 backdrop-blur-sm text-foreground-secondary border border-foreground-secondary text-xs font-medium rounded-full"
        >
          {dates}
        </span>
      </div>
      <h3 class="text-2xl md:text-3xl font-bold text-foreground">
        {title}
      </h3>
    </div>
  </div>

  <!-- Description -->
  <div class="space-y-6">
    <div>
      <p class="text-foreground-secondary leading-relaxed">{description}</p>
    </div>

    <!-- Role & Responsibilities -->
    <div>
      <h4
        class="text-lg md:text-xl font-semibold text-secondary mb-3 flex items-center gap-2"
      >
        <svg
          class="w-5 h-5 text-secondary"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
          ></path>
        </svg>
        Rol y responsabilidades
      </h4>
      <ul class="space-y-2">
        {
          role.map((item) => (
            <li class="flex items-start gap-2 text-foreground-secondary">
              <span class="text-primary mt-1">•</span>
              <span class="text-sm md:text-base">{item}</span>
            </li>
          ))
        }
      </ul>
    </div>

    <!-- Technologies -->
    <div>
      <h4
        class="text-lg md:text-xl font-semibold text-secondary mb-3 flex items-center gap-2"
      >
        <svg
          class="w-5 h-5 text-secondary"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"
          ></path>
        </svg>
        Tecnologías utilizadas
      </h4>
      <div class="flex flex-wrap ">
        {technologies.map((tech) => <Badge variant={tech} />)}
      </div>
    </div>

    <!-- Features -->
    <div>
      <h4
        class="text-lg md:text-xl font-semibold text-secondary mb-3 flex items-center gap-2"
      >
        <svg
          class="w-5 h-5 text-secondary"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 13l4 4L19 7"></path>
        </svg>
        Funcionalidades destacadas
      </h4>
      <ul class="space-y-2">
        {
          features.map((feature) => (
            <li class="flex items-start gap-2 text-foreground-secondary">
              <span class="text-primary mt-1">•</span>
              <span class="text-sm md:text-base">{feature}</span>
            </li>
          ))
        }
      </ul>
    </div>

    <!-- Results -->
    {
      results && results.length > 0 && (
        <div>
          <h4 class="text-lg md:text-xl font-semibold text-secondary mb-3 flex items-center gap-2">
            <svg
              class="w-5 h-5 text-secondary"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
              />
            </svg>
            Resultados e impacto
          </h4>
          <ul class="space-y-2">
            {results.map((result) => (
              <li class="flex items-start gap-2 text-foreground-secondary">
                <span class="text-primary mt-1">•</span>
                <span class="text-sm md:text-base">{result}</span>
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </div>

  <!-- Project Link -->
  <div class="pt-4 border-t border-zinc-800/50">
   
     {
        link ? (
          <Button href={link} target="_blank" class="w-max" intent="primary">
            Link
          </Button>
        ) : (
          <Button href={link} target="_blank" class="w-max" intent="disabled">
            Link no disponible
          </Button>
        )
      }
  </div>
</div>
