---
import type { ProcessStep } from '@/data/itemsData';

interface Props {
  step: ProcessStep;
}

const { step } = Astro.props;

const colorConfig = {
  blue: {
    gradient: 'from-blue-500 to-blue-600',
    bg: 'from-blue-500/5 to-transparent',
    border: 'hover:border-blue-500/30'
  },
  purple: {
    gradient: 'from-purple-500 to-purple-600',
    bg: 'from-purple-500/5 to-transparent',
    border: 'hover:border-purple-500/30'
  },
  green: {
    gradient: 'from-green-500 to-green-600',
    bg: 'from-green-500/5 to-transparent',
    border: 'hover:border-green-500/30'
  },
  yellow: {
    gradient: 'from-yellow-500 to-yellow-600',
    bg: 'from-yellow-500/5 to-transparent',
    border: 'hover:border-yellow-500/30'
  },
  red: {
    gradient: 'from-red-500 to-red-600',
    bg: 'from-red-500/5 to-transparent',
    border: 'hover:border-red-500/30'
  },
  indigo: {
    gradient: 'from-indigo-500 to-indigo-600',
    bg: 'from-indigo-500/5 to-transparent',
    border: 'hover:border-indigo-500/30'
  }
};

const colors = colorConfig[step.color];
---

<div class={`group bg-gradient-to-r from-gray-bg to-gray-900/50 rounded-2xl p-6 backdrop-blur-sm ${colors.border} border border-gray-600 transition-all duration-300 relative overflow-hidden`}>
  <div class={`absolute inset-0 bg-gradient-to-br ${colors.bg} opacity-0 group-hover:opacity-100 transition-opacity duration-300`}></div>
  <h3 class="text-xl font-semibold text-white/90 mb-3 flex items-center gap-3 relative z-10">
    <span class={`w-12 h-12 bg-gradient-to-br ${colors.gradient} text-white/90 rounded-full flex items-center justify-center text-lg font-bold group-hover:scale-110 transition-transform`}>
      {step.step}
    </span>
    {step.title}
  </h3>
  <p class="text-gray-300 leading-relaxed relative z-10">
    {step.description}
  </p>
</div>
